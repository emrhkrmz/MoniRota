package com.emrahkirmizi.monirota.presentation.category

import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.emrahkirmizi.monirota.data.repository.CategoryRepository
import com.emrahkirmizi.monirota.domain.model.Category
import dagger.hilt.android.lifecycle.HiltViewModel
import kotlinx.coroutines.flow.SharingStarted
import kotlinx.coroutines.flow.map
import kotlinx.coroutines.flow.stateIn
import kotlinx.coroutines.launch
import javax.inject.Inject

//SEKME 3 â€“ Kategori YÃ¶netimi
//ViewModel

@HiltViewModel
class CategoryViewModel @Inject constructor(
    private val repository: CategoryRepository
) : ViewModel() {

    // ðŸ”¹ 1. App ilk aÃ§Ä±ldÄ±ÄŸÄ±nda, eÄŸer veritabanÄ± boÅŸsa Ã¶n tanÄ±mlÄ± kategoriler eklensin
    init {
        viewModelScope.launch {
            repository.insertDefaultCategoriesIfEmpty()
        }
    }

    // ðŸ”¹ 2. TÃ¼m kategorileri canlÄ± olarak alÄ±r
    val categories = repository.getAllCategories()
        .map { it.sortedByDescending { cat -> cat.id } }
        .stateIn(
            viewModelScope,
            SharingStarted.WhileSubscribed(5000),
            emptyList()
        )

    // ðŸ”¹ 3. Yeni kategori ekler
    fun addCategory(category: Category) {
        viewModelScope.launch {
            repository.insertCategory(category)
        }
    }

    // ðŸ”¹ 4. ID'ye gÃ¶re kategori siler
    fun deleteCategoryById(id: Int) {
        viewModelScope.launch {
            repository.deleteCategoryById(id)
        }
    }
}
